process PROD  = {

        # Input file is a testbeam source file, at Fermilab, with 300 GeV pions and LED flashers.
        # Its a big file, we will only use 100 events for this test.
	source = HcalTBSource { 
		untracked vstring fileNames = { '/uscms_data/d1/jmmans/tutorial_data/HTB_011609.root' }
		untracked int32 maxEvents = 100
                untracked vstring streams = { 'HCAL_DCC020:20' }
	}

        # Output file that contains CaloTowers.
        module out = PoolOutputModule {
                 untracked string fileName = 'CaloTowers_HB_HO.root'
        }

	module hcalunpacker = HcalRawToDigi {
                int32 firstSample = 6
                int32 lastSample = 15
                untracked int32 HcalFirstFED = 20
                untracked vint32 FEDs = { 20 }
		bool FilterDataQuality = true
		bool FilterAmplitude = false
		int32 FilterAmpBegin = 4
		int32 FilterAmpEnd = 7
		double FilterAmpLevel = 22.0
                untracked bool UnpackCalib = false
	}

	module recohbhe = HcalSimpleReconstructor {
	       int32 firstSample = 4
	       int32 samplesToAdd = 4
	       string Subdetector = 'HBHE'
               string digiLabel = 'hcalunpacker'
               bool correctForTimeslew = true
	}

	module recoho = HcalSimpleReconstructor {
	       int32 firstSample = 4
	       int32 samplesToAdd = 4
	       string Subdetector = 'HO'
               string digiLabel = 'hcalunpacker'
               bool correctForTimeslew = false
	}

	module recohf = HcalSimpleReconstructor {
	       int32 firstSample = 4
	       int32 samplesToAdd = 4
	       string Subdetector = 'HF'
               string digiLabel = 'hcalunpacker'
               bool correctForTimeslew = false
	}

        module dumper = HcalRecHitDump { }

        # Parameters for making CaloTowers.
	# The thresholds with the comment Scheme B are for noise reduction 
	# and come from scheme B in CMS AN 2005/039 and Physics TDR Volume 1.
	module towermaker = CaloTowersCreator {
           double HBThreshold = 0.9     // GeV, Scheme B
           double HOThreshold = 1.1     // GeV, Scheme B
           double HESThreshold = 1.4    // GeV, Scheme B
           double HEDThreshold = 1.4    // GeV, Scheme B
           double HF1Threshold = 0.5    // GeV, ORCA value
           double HF2Threshold = 0.5    // GeV, ORCA value

           double EBThreshold = 0.09    // GeV, ORCA value w/o selective readout
           double EEThreshold = 0.45    // GeV, ORCA value w/o selective readout
	   
	   double EBSumThreshold = 0.2  // GeV, Scheme B
	   double EESumThreshold = 0.45 // GeV, Scheme B

           double HcalThreshold = -1000 // GeV, -1000 means cut not used 
	   double EcutTower = -1000     // GeV, -1000 means cut not used

	   double EBWeight = 1.0
	   double EEWeight = 1.0
	   double HBWeight = 1.0
	   double HESWeight = 1.0
	   double HEDWeight = 1.0
	   double HOWeight = 1.0
	   double HF1Weight = 1.0
	   double HF2Weight = 1.0
	   bool UseHO = true
           string hbheInput = "recohbhe"
           string hoInput = "recoho"
           string hfInput = "recohf"
           vstring ecalInputs = { }
        }

	module dumperct = CaloTowersDump  { }
        es_source = XMLIdealGeometryESSource {
               FileInPath GeometryConfiguration = 'Geometry/CMSCommonData/data/configuration.xml'
               string rootNodeName = 'cms:OCMS'
        }

        es_module = CaloTowerTopologyBuilder {}
        es_module = HcalTopologyIdealEP {}
        es_module = HcalHardcodeGeometryEP {}
        es_module = CaloTowerHardcodeGeometryEP {}
	es_module = CaloGeometryBuilder {}
	es_module = EcalBarrelGeometryEP {}

	path p = { hcalunpacker, recoho, recohbhe, recohf, towermaker, dumper, dumperct, out}

        include "../../../CalibCalorimetry/HcalPlugins/data/hbho_ring12_tb04.cfi"

}
